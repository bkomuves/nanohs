
{-% include "Base.hs" %-}

main = runIO (iosequence_
  [ print (Just 17)
  , putStrLn ""
  , putStrLn text2
  ])

-- action7 = iobind (readFile "a.txt" ReadMode) (\text -> putStrLn text)
-- action7 = iobind (withFile "a.txt" ReadMode hGetContents) (\text -> putStrLn (unlines (map ff (lines text))))

text  = unlines [ "alma" , "korte" , "szilva" ]
text2 = unlines (map ff (lines text))
ff x  = append ">>> " x

action6 = iobind getArgs (\list -> iosequence_
  [ putStrLn (append "argc = " (showInt (length list)))
  , iomapM_ putStrLn list
  ])

action5 =  (
  iobind (openFile "a.txt" ReadMode) (\h -> 
  iobind (hGetContents h) (\text ->
  iobind (hClose h)       (\_ -> 
  putStrLn text  ))))

-- main = runIO (
--   iobind (openFile "a.txt" ReadMode) (\h -> 
--   iobind (hGetChar h)                (\mbc ->  
--   iobind (case mbc of { Just c -> putChar c ; Nothing -> putStr "EOF" })  (\_ ->
--          (ioreturn mbc)
--   ))))

-- action3 = iobind (readFile "a.txt" ReadMode) putStrLn

-- main = runIO (iobind (readFile "a.txt" ReadMode) (\text -> putStrLn text))
-- main = runIO (iobind (readFile "a.txt" ReadMode)

action1 = ioseq (putChar '1') (putChar '2')

action2 = iosequence_
  [ putStrLn "1 hello IO world !!!"
  , putStrLn "2 alma"
  , putStrLn "3 korte"
  ]

--------------------------------------------------------------------------------

listAnd xs = case xs of { Nil -> True ; Cons b bs -> and b (listAnd bs) }

listOr  = go where { go xs = case xs of { Nil -> False ; Cons b bs -> or b (go bs) } }

--------------------------------------------------------------------------------

